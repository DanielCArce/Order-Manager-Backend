// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id Int @id @unique @default(autoincrement())
  name String @db.VarChar(255)
  username String @db.VarChar(255)
  password String @db.VarChar(255)
  email String @unique @db.VarChar(255)
  role Role @default(USER)
  order Order?
}
model Order {
  id Int @id @unique @default(autoincrement())
  orderID String @unique // Ex: 'O-0001'
  user User? @relation(fields: [id], references: [id])
  items Json[]
  date DateTime @default(now())
  clientID ClientsOrProviders?
  status Status @default(PENDING)
  shipping OrdersWithShipping?
}

model ShippingOrders {
  id Int @id @unique @default(autoincrement())
  shippingID String @unique // Ex: 'JN-0001'
  items Json[]
  shipping OrdersWithShipping?
  invoices Invoices[]
}
model OrdersWithShipping {
  id Int @id @unique @default(autoincrement())
  orderID String @unique
  orderR Order @relation(fields: [orderID], references: [orderID])
  shippingID String @unique
  shippingR ShippingOrders @relation(fields: [shippingID], references: [shippingID])
}

model ClientsOrProviders {
  id Int @id @unique @default(autoincrement())
  name String
  legalID String
  email String
  isFE Boolean @default(false)
  kindCompany CompanyType @default(CLIENT)
  clientOrder Order @relation(fields: [id], references: [id])
}
model Invoices {
  id Int @id @unique @default(autoincrement())
  orderID Int
  oshipping ShippingOrders @relation(fields: [orderID], references: [id])
  items Json
}
enum CompanyType {
  CLIENT
  PROVIDER
  BOTH
}
enum Status {
  PENDING
  WORKING
  COMPLETED
}
enum Role {
  ADMIN
  USER
}